name: Deploy to EC2 on master merge

on:
  pull_request:
    types: [closed]
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Build and Deploy to EC2

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build Application
        run: ./gradlew build -x test --no-daemon

      - name: Copy JAR to EC2 via SCP
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
            build/libs/*.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.DEPLOY_DIR }}/app.jar

      - name: Deploy via SSH
        run: |
          ssh -i ~/.ssh/id_rsa \
            -o StrictHostKeyChecking=no \
            -o ServerAliveInterval=30 \
            -o ServerAliveCountMax=20 \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
              set -e

              echo "최신 JAR로 컨테이너 재시작 중..."
              cd ${{ secrets.DEPLOY_DIR }}

              docker-compose down
              docker-compose up -d --build

              echo "배포 완료"
          EOF
